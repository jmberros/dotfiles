#################
#
# Utilities
#
#################
# CHeck the output of xrandr | grep "connected":
# You have to change these here and in the polybar/*.ini files
DISPLAY_LAPTOP="eDP-1"
DISPLAY_MONITOR="HDMI-1-3"
#
#
#
# TakeUp
monitor-prefect-flow-runs () {
  FLOW_NAME_ARGS=$1
  while true; do
    clear;
    echo "Prefect flow-runs of '$FLOW_NAME_ARGS'\n";
    export PREFECT_CMD="prefect flow-run ls $FLOW_NAME_ARGS \
        --state-type PENDING \
        --state-type RUNNING \
        --state-type COMPLETED \
        --state-type FAILED \
        --limit 4
    ";
    eval $PREFECT_CMD | \
    awk -F '│' '{
      # Remove leading/trailing spaces from fields 2, 3, 4, and 5
      gsub(/^ +| +$/, "", $2);
      gsub(/^ +| +$/, "", $3);
      gsub(/^ +| +$/, "", $4);
      gsub(/^ +| +$/, "", $5);
      # Only process lines where field 2 (the ID) is not empty
      if ($2 != "") {
        # Print columns: $3 (column 2), $4 (column 3), $5 (column 4), then $2 (column 1)
        print $5 " | " $3 " | " $6 " | " $4
      }
    }' | \
    sed -e 's/FAILED/❌/g' \
    -e 's/COMPLETED/✔/g' \
    -e 's/RUNNING/▶️/g' \
    -e 's/PENDING/⏳/g' | \
    column -t -s "|" -o " " | \
    grep -vE "(day|week|month)s? ago";
    sleep 60;
  done;
}
monitor-propagations () {
  monitor-prefect-flow-runs "--flow-name propagate-flow";
}
monitor-inferences () {
  monitor-prefect-flow-runs "--flow-name run-models-inferences-flow --flow-name rate_behavior --flow-name rate_quality";
}
monitor-training () {
  monitor-prefect-flow-runs "--flow-name train-global-model-flow --flow-name train-model-flow --flow-name train-safe-rates-classifier"
}
monitor-snowclone() {
  monitor-prefect-flow-runs "--flow-name snowclone";
}
monitor-build () {
  REPO_NAME=$1;
  LIMIT=$2
  while true; do
    clear;
    echo "$REPO_NAME github actions";
    PAGER='' DEBUG=0 gh run list --limit $LIMIT;
    sleep 15s;
  done
}
monitor-services-build() {
  wd takeupai-services && monitor-build "SERVICES" 6
}
monitor-core-build() {
  wd takeupai-core && monitor-build "CORE" 5
}
monitor-dbt-build() {
  wd takeup-dbt && monitor-build "DBT" 3
}
monitor-cc-build() {
  wd takeupai-command-center && monitor-build "COMMAND CENTER" 3
}
monitor-rsg-build() {
  wd rate_setting_guide && monitor-build "RSG" 3
}
monitor-model-build() {
  wd takeupai-model && monitor-build "MODEL" 3
}

slowly() {
  while read LINE; do
    echo $LINE;
    sleep 0.5;
  done
}

# break_corto () { sleep 300; cvlc ~/Dropbox/Happyday.mp3 }
# break_largo () { sleep 900; cvlc ~/Dropbox/Happyday.mp3 }
pswatch () { watch -n1 "ps aux | head -n1 && ps aux | grep '$1' | grep -v 'grep'" }
# Seems unnecessary if you have fzf:
# findhome () { find ~ -iname "*${1}*" }
# findhere () { find . -iname "*${1}" }

zl() {
  z $1
  cd ..
  cd -  # triggers venv selection and maybe more zsh-plugins stuff that activate on dir change
}

cs () {
  cd $1

  if [ $? -eq 0 ]; then  # If dir exists!
    if [ `ls | wc -l` -ge 20 ]; then
      ll
    else
      ls
    fi
  fi
}

# (S)earch under this (D)irectory
sd () {
  # cs $(find * -maxdepth 1 -type d | fzf --reverse)
  cd ~ && cs $(find * -type d | fzf --reverse)
}
vimfzf () {
  # Search the contents of all files under this spot, and open the
  # file where the chosen match is with vim:
  vim $(rg . | fzf | cut -d":" -f1)
}

backup () {
  newname=$1.`date +%Y%m%d.%H%M.bak`
  mv $1 $newname
  echo "-> Backed up to '$newname'"
  cp -p $newname $1
}

#################
#
# Productivity setup
#
#################

source ~/repos/dotfiles/scripts/leetcode
source ~/repos/dotfiles/scripts/home
source ~/repos/dotfiles/scripts/notion
source ~/repos/dotfiles/scripts/noisly
source ~/repos/dotfiles/scripts/sysdes

disown_everything() {
  jobs | awk '{ print $1 }' | grep -o -e "[0-9]" | while read JOBN; do disown %$JOBN; done
}

prepare_to_work() {
  home
  noisly
  notion
  # sysdes
  leetcode
  disown_everything
  exit
}

#################
#
# Monitor and keyboard setup
#
#################

swapescape() {
  setxkbmap -option caps:swapescape
}
set_background() {
  feh --bg-fill ~/Dropbox/Fotos/wpp/vaporwave/vaporwave-skyline.jpg
}
xu() {
  HOSTNAME="`hostname`"
  if [ "$HOSTNAME" = "tlon" ]; then
    xrandr --auto --output HDMI-1-3 --mode 2560x1440 --above eDP-2
    xrandr --auto --output eDP-1 --mode 3840x2160 --scale 0.5x0.5
    #xrandr --auto --output eDP-2 --mode 3840x2160 --scale 1x1
    # xrandr --auto --output eDP-2 --mode 3840x2160 --scale 0.5x0.5

    # autorandr for some reason it makes dmenu_run very small (!!!!)
    #autorandr vertical
    #xrandr --output HDMI-1-1 --above eDP-2
    #xrandr --output eDP-2 --scale 0.5x0.5
    # autorandr --save casa_con_monitor
    # autorandr --load casa_con_monitor  # Assumes the above commands were run before
    ~/repos/dotfiles/polybar/launch_polybar_two_monitors.sh
  elif [ "$HOSTNAME" = "arrakis" ]; then
    xrandr --auto --output HDMI-1 --above eDP-1
    xrandr --auto --output DP-1 --above eDP-1
  fi
  ~/Dropbox/scripts/keyboard_for_laptop.sh
  swapescape
  set_background
}
xl() {
  HOSTNAME="`hostname`"
  if [ "$HOSTNAME" = "tlon" ]; then
    # NOTE: this series of commands are meant to leave a functional 2-display
    # setting with the Lenovo @tlon, which seems to be a PITA. The
    # back-and-forth between resolutions of the main monitor is the only
    # way I found to make it work. x___x
    # xrandr --auto
    xrandr --auto --output $DISPLAY_LAPTOP --mode 1920x1080 # --scale 1x1 # seems more crispy than scaling a larger res
    xrandr --output $DISPLAY_MONITOR --left-of $DISPLAY_LAPTOP  # Defaults to 2560x1440
    # xrandr --auto --output HDMI-1-1 --left-of eDP-1 --mode 3840x2160;  # Everything too small
    # xrandr --auto --output HDMI-1-1 --left-of eDP-1 --mode 3840x2160 --scale 0.5x0.5;  # Looks ugly?
    #xrandr --auto --output eDP-1 --scale 0.5x0.5  # Scales 200% the laptop display
    #xrandr --auto --output eDP-1 --scale 1.0x1.0
    #xrandr --auto --output eDP-1 --scale 0.5x0.5  # Scales 200% the laptop display
  elif [ "$HOSTNAME" = "arrakis" ]; then
    xrandr --auto --output HDMI-1 --left-of eDP-1
    xrandr --auto --output DP-1 --left-of eDP-1
  fi
  set_background
  ~/Dropbox/scripts/keyboard_for_desktop.sh
  swapescape
}
xr() {
  xrandr --auto --output HDMI-1 --right-of eDP-1
  xrandr --auto --output DP-1 --right-of eDP-1
  ~/Dropbox/scripts/keyboard_for_desktop.sh
  # swapescape
  set_background
}
xsolo() {
  xrandr --auto --output eDP-1 --scale 0.5x0.5
}
