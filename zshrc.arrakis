#################
#
# Oh My ZSH Configuration
#
#################

ZSH=$HOME/.oh-my-zsh
COMPLETION_WAITING_DOTS="true"

plugins=(git ssh-agent capistrano bundler gem git-extras web-search wd python pip npm last-working-dir virtualenv autoswitch_virtualenv)

#################
#
# Aliases and Functions
#
#################

ssh () { command ssh "$@"; eval "$("$BASE16_SHELL/profile_helper.sh")"; }

alias bat="batcat --theme=base16-256"
alias cat="batcat --theme=base16-256 --paging=never"

# SSH to servers
alias beleriand='ssh -XA juan@beleriand.local'
alias motorhome='beleriand'
alias bele='beleriand'
alias cluster='ssh -XA -p 2222 juan@biocodices.hopto.org'
alias cluster1='ssh -XA -p 2222 juan@biocodices.hopto.org'
alias cluster2='ssh -XA -p 2223 juan@biocodices.hopto.org'
alias numenor='ssh -p 2224 -XA juan@biocodices.hopto.org'

alias dc="docker-compose"

# Grata stuff
alias dc_regular="ln -fs ~/repos/grata-search/docker-compose.regular.yml ~/repos/grata-search/docker-compose.yml"
alias dc_jupyter_local='dc stop; ln -fs ~/repos/grata-search/docker-compose.regular.yml ~/repos/grata-search/docker-compose.yml; docker-compose run -p 9999:9999 app bash -c "cd notebooks_Juan; pip install ipython; jupyter lab --no-browser --port 9999 --ip 0.0.0.0 --allow-root"'
alias dc_jupyter_beta='dc stop; ln -fs ~/repos/grata-search/docker-compose.jupyter.yml ~/repos/grata-search/docker-compose.yml; docker-compose run -p 9999:9999 app bash -c "cd notebooks_Juan; pip install ipython; jupyter lab --no-browser --port 9999 --ip 0.0.0.0 --allow-root"'
alias run_tests='dc_regular; dc stop; docker-compose run -e TEST_ENV="true" --rm app python manage.py test'
alias test_name_refiner='./run_unit_tests.sh companies.tests.name_finder.test_name_refiner'
alias test_name_utils='./run_unit_tests.sh companies.tests.name_finder.test_utils'
alias dc_stop_most='docker-compose stop search rabbitmq mongodb worker-beat location detect search-scope-suggestions bitmap-forwarder dead page nginx redis worker-search-jobs ddagent'
alias launchprod="gotodeploy && kubectl config use-context production.gratadata.com && source cluster/production_search_environment.sh && kubessh -s $STAGE"
alias launchstaging="gotodeploy && kubectl config use-context staging.gratadata.com && source cluster/staging_search_environment.sh && kubessh -s $STAGE"
alias startauthfront="cd ~/dev/grata-auth/web && npm run start"
alias startauthback="cd ~/dev/grata-auth && dc up -d"
alias startsearchfront="cd ~/dev/gsd-enterprise-search/web && npm run start"
alias startsearchback="cd ~/dev/gsd-enterprise-search && dc up -d"
alias searchshell="cd ~/dev/gsd-enterprise-search && dc run app python manage.py shell"
alias gotodeploy="cd ~/dev/gsd-deploy"
alias gotosearch="cd ~/dev/gsd-enterprise-search"
alias appm="docker-compose run --rm app python manage.py"
alias port_forwarding_beta="ssh -N -p80 -i ~/.ssh/staging.pem -L 5433:grata-search-staging-blue.cxmnmuyxrqly.us-east-1.rds.amazonaws.com:5432 forward@bastion-staging.devapp.grata.com"
alias docker_for_jupyter

dc_run_full() {
    dc run -p 9999:9999 app bash -c "curl -sL https://cutt.ly/tXjQlkO | bash && zsh"
}
function get_search_user_pod() {
    kubectl get pods --all-namespaces | \
        grep "search-user-" | \
        grep "Running" | \
        grep -v "interactions-" | \
        head -n1 | \
        awk '{ print $2 }'
}
function connect_to_search_user_pod() {
    POD_NAME=`get_search_user_pod`
    kubectl exec -it $POD_NAME --namespace search -- zsh
}
function full_connect_to_search_user_pod() {
    POD_NAME=`get_search_user_pod`
    kubectl exec -it $POD_NAME --namespace search -- bash -c "curl -sL https://cutt.ly/tXjQlkO | bash"
    connect_to_search_user_pod
}
function single_file_deploy_to_search_user_pod()  {
    POD_NAME=`get_search_user_pod`
    FILEPATH=`echo $1 | sed "s:^app/::"`
    echo "($POD_NAME) ðŸš€ $FILEPATH"
    kubectl cp --namespace search app/$FILEPATH ${POD_NAME}:$FILEPATH
}
function deploy_new_files_to_search_user_pod() {
    POD_NAME=`get_search_user_pod`
    CURRENT_DIR=`pwd`
    cd ~/repos/grata-search
    echo
    echo "ðŸ“¦ Deploying to $POD_NAME"
    echo
    for FILEPATH in `git diff --name-status main | grep "^A" | grep -v "/tests/" | grep -v "notebooks_Juan" | cut -f2 | sed "s:^app/::"`; do
        single_file_deploy_to_search_user_pod $FILEPATH
    done
    cd $CURRENT_DIR
}

alias xa='xrandr --auto'

function swapescape() {
    setxkbmap -option caps:swapescape;
}
function set_background() {
    # feh --bg-fill /usr/share/backgrounds/warty-final-ubuntu.png;
    # feh --bg-fill /home/juan/Dropbox/Fotos/wpp/Claude_Monet,_Le_Grand_Canal.jpg;
    feh --bg-fill /home/juan/Dropbox/Fotos/wpp/david-hockney-woldgate-woods-2006.jpg 
}
function xu() {
    xrandr --auto --output HDMI-1 --above eDP-1;
    xrandr --auto --output DP-1 --above eDP-1;
    /home/juan/Dropbox/scripts/keyboard_for_laptop.sh;
    swapescape;
    set_background;
}
function xl() {
    xrandr --auto --output HDMI-1 --left-of eDP-1;
    xrandr --auto --output DP-1 --left-of eDP-1; 
    ~/Dropbox/scripts/keyboard_for_desktop.sh;
    swapescape;
    set_background;
}

alias lap='~/Dropbox/scripts/keyboard_for_laptop.sh'
alias desk='~/Dropbox/scripts/keyboard_for_desktop.sh'
alias jewa="jekyll serve --watch"

# Common operations
alias sc='cs'
alias mv='mv -i'
alias cp='cp -iv'
alias ls='ls --color=auto --group-directories-first'
alias sl='ls --color=auto --group-directories-first'
alias l='ls --color=auto --group-directories-first'
alias ll='ls -alhF --color=auto --group-directories-first'
alias la='ls -A --color=auto --group-directories-first'
alias grep='grep -i --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias ..='cs ..'
alias cs..='cs ..'
alias xclip="xclip -selection primary -f | xclip -selection clipboard"
alias tree='tree -F --dirsfirst --noreport'
alias tree+='tree -hF --du --dirsfirst --noreport'

# Tmux
alias tnew="tmux new-session -s"
alias tach="tmux attach-session -t"

# replace AWK with Ruby
alias rawk='/usr/bin/ruby2.3 -lane'
alias rawk,='/usr/bin/ruby2.3 -F, -lane'
alias rawk:='/usr/bin/ruby2.3 -F: -lane'
alias rawkt='/usr/bin/ruby2.3 -F"\t" -lane'
alias rawks='/usr/bin/ruby2.3 -F"\s+" -lane'

# Bundler
alias be='bundle exec'
alias bi='bundle install'

# Git related aliases
push_branch() {
    branch=`git rev-parse --symbolic-full-name --abbrev-ref HEAD`
    git push $1 $branch
}
pull_branch() {
    branch=`git rev-parse --symbolic-full-name --abbrev-ref HEAD`
    git pull $1 $branch
}
autoload push_branch
autoload pull_branch

alias s='clear; git status'
alias gpo='git push origin'
alias gpom='git push origin master'
alias gpob='push_branch origin'
alias gfo='git fetch origin'
alias gfu='git fetch upstream'
alias gfot='git fetch origin --tags'
alias gfut='git fetch upstream --tags'
alias gpot='git push origin --tags'
alias gput='git push upstream --tags'
alias gpu='git push upstream'
alias gpum='git push upstream master'
alias gpub='push_branch upstream'
alias glo='git pull origin'
alias glom='git pull origin master'
alias glob='pull_branch origin'
alias glum='git pull upstream master'
alias glub='pull_branch upstream'
alias gadd='git add'

#################
#
# Functions
#
#################

break_corto () {
    sleep 300;
    cvlc ~/Dropbox/Happyday.mp3
}
break_largo () {
    sleep 900;
    cvlc ~/Dropbox/Happyday.mp3
}

pswatch () {
  watch -n1 "ps aux | head -n1 && ps aux | grep '$1' | grep -v 'grep'"
}

cs () {
  cd $1;

  if [ $? -eq 0 ]; then  # If dir exists!
    if [ `ls | wc -l` -ge 15 ]; then
      ls --color=auto --group-directories-first;
    else
      ls -lh --color=auto --group-directories-first;
    fi
  fi
}

findhome () {
    find ~ -iname "*${1}*"
}

findhere () {
    find . -iname "*${1}"
}

backup () {
  newname=$1.`date +%Y%m%d.%H%M.bak`;
  mv $1 $newname;
  echo "-> Backed up to '$newname'";
  cp -p $newname $1;
}


#################
#
# Etc.
#
#################


source $ZSH/oh-my-zsh.sh

# Base16 Shell
BASE16_SHELL="$HOME/.config/base16-shell/"
[ -n "$PS1" ] && \
    [ -s "$BASE16_SHELL/profile_helper.sh" ] && \
    eval "$("$BASE16_SHELL/profile_helper.sh")"

#################
#
# PATH and variables
# see ~/.zshenv
#
#################

# export PATH=~/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH
export PATH=/home/juan/anaconda3/bin:$PATH  # Anaconda
export PATH="$HOME/.rbenv/bin:$PATH"  # Rb Env
export PATH="/home/juan/software/pycharm-2022.1.4/bin":$PATH # PyCharm
export PATH="$HOME/.local/bin":$PATH

eval "$(rbenv init -)"
# https://github.com/rbenv/ruby-build/discussions/1940#discussioncomment-2663209
# Esto es porque Ubuntu 22.04 venÃ­a con un Open SSL incompatible con ruby 2.*
# AsÃ­ que tuve que hacer lo que dice ese comment
export RUBY_CONFIGURE_OPTS="--with-openssl-dir=/opt/openssl-1.1.1o/"

cyan=$(tput setaf 6)
export STDERRED_ESC_CODE=`echo -e "$cyan"`
# export LD_PRELOAD="/home/juan/software/stderred/build/libstderred.so${LD_PRELOAD:+:$LD_PRELOAD}"

eval "$(dircolors ~/.dircolors)";

# FZF and RG in Vim:
# https://dev.to/iggredible/how-to-search-faster-in-vim-with-fzf-vim-36ko
if type rg &> /dev/null; then
    export FZF_DEFAULT_COMMAND='rg --files'
    export FZF_DEFAULT_OPTS='-m --height 50% --border'
fi
